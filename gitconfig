[user]
	email = ben.barbour@gmail.com
	name = Ben Barbour
[color]
	ui = true
[color "diff"]
	whitespace = red reverse
[diff]
	tool = p4merge
[difftool]
	prompt = false
[difftool "p4merge"]
	cmd = p4merge "$LOCAL" "$REMOTE"
	keepTemporaries = false
	trustExitCode = false
	keepBackup = false
[alias]
	stash-unapply = !git stash show -p | git apply -R
	graph = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cd) %C(bold blue)<%an>%Creset' --abbrev-commit --date=short
	graphall = !git graph --all
	g = !git graph
	ga = !git graph --all
	co = checkout
	s = status
	ctags = !.git/hooks/ctags
	d = diff
	ds = diff --staged
	whatadded = log --diff-filter=A  # Takes a file as a parameter, returns the commit that added that file
	cleanup = "!git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d"  # Removes all local branches that have already been merged into this one
	cleanup-check = "!echo 'These branches have already been merged'; git branch --merged | grep -v '\\*'"  # Displays branches that would be deleted by the 'cleanup' alias
	addnows = "!sh -c 'git diff -w --no-color "$@" | git apply --cached --ignore-whitespace' -"  # Stages all non-whitespace changes
	pull = pull --ff-only
[merge]
	tool = p4mergetool
	log = true
[core]
	mergeoptions = --no-commit
	editor = nvim
	pager = diff-so-fancy | less --tabs=4 -RFX
[push]
	default = current
[init]
	templatedir = ~/.git_template
[rerere]
	enabled = true
[mergetool "p4mergetool"]
	cmd = p4merge "$BASE" "$REMOTE" "$LOCAL" "$MERGED"
	trustExitCode = false
	keepTemporaries = false
	keepBackup = false
[mergetool]
	prompt = false
	keepBackup = false
[color "diff-highlight"]
	oldNormal = red bold
	oldHighlight = red bold 52
	newNormal = green bold
	newHighlight = green bold 22
[diff-so-fancy]
	markEmptyLines = false
